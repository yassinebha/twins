% NIAK fmri preprocessing pipeline for the ABIDE dataset
%
% Copyright (c) Pierre Bellec, 
%   Research Centre of the Montreal Geriatric Institute
%   & Department of Computer Science and Operations Research
%   University of Montreal, QuÃ©bec, Canada, 2012
% Maintainer : pierre.bellec@criugm.qc.ca
% See licensing information in the code.
% Keywords : medical imaging, fMRI, preprocessing, pipeline

% Permission is hereby granted, free of charge, to any person obtaining a copy
% of this software and associated documentation files (the "Software"), to deal
% in the Software without restriction, including without limitation the rights
% to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
% copies of the Software, and to permit persons to whom the Software is
% furnished to do so, subject to the following conditions:
%
% The above copyright notice and this permission notice shall be included in
% all copies or substantial portions of the Software.
%
% THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
% IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
% FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
% AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
% LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
% OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
% THE SOFTWARE.

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Setting input/output files %%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

clear
path_data_in = '/sb/project/gsf-624-aa/database/abide/';
path_data_out= '/sb/scratch/yassinebha/database/abide_asym/';
list_sites = { 'SBL'   'Stanford'  'UCLA_1'  'USM'  'KKI'  'Leuven_2'  'MaxMun_b'  'MaxMun_d'  'OHSU'  'Pitt'  'SDSU'  'UCLA_2'  'Yale'  'Caltech'  'CMU_b'  'CMU_a'   'MaxMun_a'  'MaxMun_c'  'NYU'   'Olin'  'Leuven_1' 'UM_2'  'UM_1' 'Trinity' };
%list_sites = { 'UM_2' };% uncompleted with failled job 
%list_sites = { 'Leuven_1' };% uncompleted with failled job 'Leuven_1_t1_preprocess_X0050711' and 'Leuven_1_t1_preprocess_X0050698'

% already done site :  'Yale' 'OHSU' 'Olin' 'Pitt' 'SBL' 'SDSU' 'Stanford' 'UCLA_1'  'USM' 'KKI'  'Leuven_2'  'MaxMun_b'  'MaxMun_d' 'MaxMun_a'  'MaxMun_c' 'UCLA_2'  'Caltech'  'CMU_b'  'CMU_a' 'NYU' 'Trinity'
% remaining sites: 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% General pipeline options  %%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

% General
opt.size_output = 'quality_control'; % The amount of outputs that are generated by the pipeline. 'all' will keep intermediate outputs, 'quality_control' will only keep the quality control outputs. 
%opt.granularity = 'subject'; % The granularity level of the pipeline

% Slice timing correction (niak_brick_slice_timing)
opt.slice_timing.delay_in_tr      = 0;                       % The delay in TR ("blank" time between two volumes)
opt.slice_timing.suppress_vol     = 0;                       % Number of dummy scans to suppress.
opt.slice_timing.flag_center = true;
opt.slice_timing.flag_skip = true; 
opt.slice_timing.type_acquisition = 'interleaved ascending'; % Slice timing order (available options : 'sequential ascending', 'sequential descending', 'interleaved ascending', 'interleaved descending')
opt.slice_timing.type_scanner     = 'Bruker';                % Scanner manufacturer. Only the value 'Siemens' will actually have an impact


% resampling in stereotaxic space
opt.resample_vol.interpolation = 'trilinear'; % The resampling scheme. The most accurate is 'sinc' but it is awfully slow
opt.resample_vol.voxel_size    = [3 3 3];     % The voxel size to use in the stereotaxic space

% Temporal filtering (niak_brick_time_filter)
opt.time_filter.hp = 0.01; % Cut-off frequency for high-pass filtering, or removal of low frequencies (in Hz). A cut-off of -Inf will result in no high-pass filtering.
opt.time_filter.lp = 0.1;  % Cut-off frequency for low-pass filtering, or removal of high frequencies (in Hz). A cut-off of Inf will result in no low-pass filtering.

% Regression of confounds and scrubbing (niak_brick_regress_confounds)
opt.regress_confounds.flag_wm = true;            % Turn on/off the regression of the average white matter signal (true: apply / false : don't apply)
opt.regress_confounds.flag_vent = true;          % Turn on/off the regression of the average of the ventricles (true: apply / false : don't apply)
opt.regress_confounds.flag_motion_params = true; % Turn on/off the regression of the motion parameters (true: apply / false : don't apply)
opt.regress_confounds.flag_gsc = false;          % Turn on/off the regression of the PCA-based estimation of the global signal (true: apply / false : don't apply)
opt.regress_confounds.flag_scrubbing = true;     % Turn on/off the scrubbing of time frames with excessive motion (true: apply / false : don't apply)
opt.regress_confounds.thre_fd = 0.5;             % The threshold on frame displacement that is used to determine frames with excessive motion in the scrubbing procedure

% Correction of physiological noise (niak_pipeline_corsica)
opt.corsica.sica.nb_comp             = 60;    % Number of components estimated during the ICA. 20 is a minimal number, 60 was used in the validation of CORSICA.
opt.corsica.threshold                = 0.15;  % This threshold has been calibrated on a validation database as providing good sensitivity with excellent specificity.
opt.corsica.flag_skip                = 1;     % Skip CORSICA (0: don't skip, 1 : skip). Even if it is skipped, ICA results will be generated for quality-control purposes. The method is not currently considered to be stable enough for production unless it is manually supervised.

% Spatial smoothing (niak_brick_smooth_vol)
opt.smooth_vol.fwhm      = 6;  % Full-width at maximum (FWHM) of the Gaussian blurring kernel, in mm.
opt.smooth_vol.flag_skip = 0;  % Skip spatial smoothing (0: don't skip, 1 : skip)

% PVE
opt.pve.flag_skip = true;

% use Asymetric template:
opt.template_t1 = 'mni_icbm152_nlin_asym_09a';

% Linear and non-linear fit of the anatomical image in the stereotaxic
opt.t1_preprocess.nu_correct.arg = '-distance 70'; % Parameter for non-uniformity correction . 200 is a suggested value for 1.5T images, 50 for 3T images. If you find that this stage did not work well, this parameter is usually critical to improve the results.

% T1-T2 coregistration (niak_brick_anat2func)
opt.anat2func.init = 'center'; % An initial guess of the transform. Possible values 'identity', 'center'. 'identity' is self-explanatory. The 'center' option usually does more harm than good. Use it only if you have very big misalignement between the two images (say, > 2 cm).    


% Loop over sites
pipeline = struct();
opt.flag_test = true;
opt_init = opt;
for num_s = 1:length(list_sites)	
    clear files_in pipeline_site 
    opt = opt_init;
    path_raw = [path_data_in 'raw_mnc' filesep list_sites{num_s}];
    files_in = niak_grab_abide(path_raw);
    opt.folder_out  = [path_data_out 'fmri_preprocess/' list_sites{num_s} filesep];    % Where to store the results
        switch list_sites{num_s}
              case 'Trinity'
                  opt.slice_timing.tr = 2;
              case 'Caltech'
                  opt.anat2func.init = 'identity';
                  opt.slice_timing.flag_center = false;
              case 'Yale'
                  tune_subj_list= { 'X0050570' 'X0050617' 'X0050627' 'X0050618' 'X0050566' 'X0050556' 'X0050620' 'X0050564' 'X0050577' };
                  if ~isfield(opt,'tune')
                     opt.tune = struct();
                  end
                  for num_t = 1:length(tune_subj_list)
                      opt.tune(num_t).subject = tune_subj_list{num_t};
                      opt.tune(num_t).param.t1_preprocess.nu_correct.arg = '-distance 25';
                  end
                  opt.tune(num_t+1).subject = 'X0050613';
                  opt.tune(num_t+1).param.t1_preprocess.nu_correct.arg = '-distance 50';
%             case 'Leuven_1'
%                  opt.psom.restart = {'X0050710'}; %restarted subject after image cropping out subject's shoulders
              case 'UM_1'
                   tune_subj_list = { 'X0050302' , 'X0050311' , 'X0050328' , 'X0050350' , 'X0050358' , 'X0050361' };
                   if ~isfield(opt,'tune')
                      opt.tune = struct();
                   end
                   for num_t = 1:length(tune_subj_list)
                       opt.tune(num_t).subject = tune_subj_list{num_t};
                       opt.tune(num_t).param.t1_preprocess.nu_correct.arg = '-distance 25';
                   end

%                case 'UM_2'
%                    tune_subj_list = { 'X0050407' , 'X0050416' , 'X0050425' };
%                    if ~isfield(opt,'tune')
%                       opt.tune = struct();
%                    end
%                    for num_t = 1:length(tune_subj_list)
%                        opt.tune(num_t).subject = tune_subj_list{num_t};
%                        opt.tune(num_t).param.t1_preprocess.nu_correct.arg = '-distance 50';
%                    end

        end
   opt.psom.flag_pause = false;
   pipeline_site = niak_pipeline_fmri_preprocess(files_in,opt);
   pipeline = psom_merge_pipeline(pipeline,pipeline_site,[list_sites{num_s} '_']);
end

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Run the fmri_preprocess pipeline  %%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
opt_pipe.path_logs = [path_data_out 'fmri_preprocess/logs/'];
opt_pipe.max_queued = 300;
opt_pipe.psom.flag_pause = false;
%opt_pipe.qsub_options = '-q lm -l walltime=5:00:00';
psom_run_pipeline(pipeline,opt_pipe)

%extra
system(['cp ' mfilename('fullpath') '.m ' path_data_out '.']); % make a copie of this script to output folder
